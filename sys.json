{
    "chapters": [
        {
            "name": "Chapter 1",
            "description": "In which our intrepid hero battles standard out, standard error, file descriptors and writing to files.",
            "sections": [
                {
                    "name": "Hello World (System call style)",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0010-HelloWorld-v2",
                            "topics": "a\nb\nc\n"
                        },
                        {
                            "type": "play",
                            "code": "int main() {return 0;}",
                            "gccOptions": "-lm -Wall -fmax-errors=10 -Wextra",
                            "programCommandLineArgs": "",
                            "docFile": "chapters/chapter01/play-1-1.md"
                        }
                    ]
                },
                {
                    "name": "Hello Standard Error Stream",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0020-HelloStdErr-24fps600kbs",
                            "topics": "a\nb\nc\n",
                            "docFile": "chapters/chapter01/0020-HelloStdErr-Doc.md"
                        },
                        {
                            "type": "play",
                            "code": "int main() {return 0;}",
                            "gccOptions": "-lm -Wall -fmax-errors=10 -Wextra",
                            "programCommandLineArgs": "",
                            "docFile": "chapters/chapter01/play-2-1.md"
                        }
                    ]
                },
                {
                    "name": "Writing to files",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0030-OpenCreateAFile-650kb",
                            "topics": "a\nb\nc\n"
                        },
                        {
                            "type": "play",
                            "code": "int main() {return 0;}",
                            "gccOptions": "-lm -Wall -fmax-errors=10 -Wextra",
                            "programCommandLineArgs": "",
                            "docFile": "chapters/chapter01/play-3-1.md"
                        },
                        {
                            "type": "play",
                            "code": "int main() {return 0;}",
                            "gccOptions": "-lm -Wall -fmax-errors=10 -Wextra",
                            "programCommandLineArgs": "",
                            "docFile": "chapters/chapter01/play-3-2.md"
                        }
                    ]
                },
                {
                    "name": "Not everything is a system call",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0040-OpenErrorsPrintf-600kbs",
                            "topics": "a\nb\nc\n"
                        },
                        {
                            "type": "play",
                            "code": "int main() {return 0;}",
                            "gccOptions": "-lm -Wall -fmax-errors=10 -Wextra",
                            "programCommandLineArgs": "",
                            "docFile": "chapters/chapter01/play-4-1.md"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Chapter 2",
            "description": "Sizing up C types and their limits, int, char arrays and incrementing pointers.",
            "sections": [
                {
                    "name": "Not all bytes are 8 bits?",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0050-NotAllBytesAre8Bits"
                        },
                        {
                            "type": "play",
                            "docFile": "chapters/chapter02/play-1-1.md"
                        }
                    ]
                },
                {
                    "name": "Follow the int pointer",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0060-FollowTheIntPointer"
                        },
                        {
                            "type": "play",
                            "code": "#include <stdio.h>\r\n\r\nvoid print_array();\r\nvoid print_swapped_array();\r\nvoid test_print_array();\r\nvoid test_print_swapped_array();\r\n\r\nvoid print_array() {\r\n\t\/\/ Write your solution here\r\n}\r\n\r\nvoid print_swapped_array() {\r\n\t\/\/ Write your solution here\r\n}\r\n\r\n\/\/ Uncomment the test functions and check run tests if you would like to run your code with provided tests\r\n\/\/ You can find test code in 'test.c' under 'File Browser' \r\nint main() {\r\n    print_array();\r\n    print_swapped_array();\r\n    \/\/ test_print_array();\r\n    \/\/ test_print_swapped_array();\r\n    return 0;\r\n}",
                            "testcode": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <unistd.h>\r\n\r\n#define ANSI_COLOR_RED     \"\\x1b[31m\"\r\n#define ANSI_COLOR_GREEN   \"\\x1b[32m\"\r\n#define ANSI_COLOR_RESET   \"\\x1b[0m\"\r\n#define CHILD 0\r\n\r\nvoid print_array();\r\nvoid print_swapped_array();\r\nvoid test_print_array();\r\nvoid test_print_swapped_array();\r\n\r\nvoid test_print_array() {\r\n    \/\/ Fork a process, which runs print_array\r\n    \/\/ In parent process, read from child process and check result\r\n    \r\n    int fd[2];\r\n    char buffer[512];\r\n    memset(buffer, 0, 512);\r\n    pipe(fd);\r\n    pid_t pid = fork();\r\n    if (pid == CHILD) {\r\n        dup2(fd[1], STDOUT_FILENO);\r\n        close(fd[0]);\r\n        print_array();\r\n        printf(\"\\n\");\r\n        exit(0);\r\n    }\r\n    else {\r\n        dup2(fd[0], STDIN_FILENO);\r\n        close(fd[1]);\r\n        \r\n        fgets(buffer, 512, stdin);\r\n        if (strcmp(buffer, \"10 30 60 50 40\\n\") == 0)\r\n            printf(ANSI_COLOR_GREEN \"test_print_array passed\" ANSI_COLOR_RESET \"\\n\");\r\n        else {\r\n            printf(ANSI_COLOR_RED \"test_print_array failed\" ANSI_COLOR_RESET \"\\n\");\r\n            printf(\"Your Output: %s\", buffer);\r\n            printf(\"Expected Output: 10 30 60 50 40\\n\");\r\n        }\r\n        \/\/ waitpid(pid, NULL, 0); \/\/ Cannot #include <sys\/wait.h>, no resource.h file\r\n    }\r\n}\r\n\r\nvoid test_print_swapped_array() {\r\n    int fd[2];\r\n    char buffer[512];\r\n    memset(buffer, 0, 512);\r\n    pipe(fd);\r\n    pid_t pid = fork();\r\n    if (pid == CHILD) {\r\n        dup2(fd[1], STDOUT_FILENO);\r\n        close(fd[0]);\r\n        print_swapped_array();\r\n        exit(0);\r\n    }\r\n    else {\r\n        dup2(fd[0], STDIN_FILENO);\r\n        close(fd[1]);\r\n        \r\n        fgets(buffer, 512, stdin);\r\n        if (strcmp(buffer, \"40 30 60 50 10\\n\") == 0)\r\n            printf(ANSI_COLOR_GREEN \"test_print_swapped_array passed\" ANSI_COLOR_RESET \"\\n\");\r\n        else {\r\n            printf(ANSI_COLOR_RED \"test_print_swapped_array failed\" ANSI_COLOR_RESET \"\\n\");\r\n            printf(\"Your Output: %s\\n\", buffer);\r\n            printf(\"Expected Output: 40 30 60 50 10\\n\");   \r\n        }\r\n        \/\/ waitpid(pid, NULL, 0);\r\n    }\r\n}",
                            "docFile": "chapters/chapter02/play-2-1.md"
                        }
                    ]
                },
                {
                    "name": "sizeof character arrays, incrementing pointers",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0070-CharacterPointers"
                        },
                        {
                            "type": "play",
                            "docFile": "chapters/chapter02/play-3-1.md",
                            "testcode": "this is a trial"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Chapter 3",
            "description": "Program arguments, environment variables, working with character arrays (strings)",
            "sections": [
                {
                    "name": "Program arguments argc argv",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0080-ProgramArguments"
                        }
                    ]
                },
                {
                    "name": "Environment Variables",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0090-Environment"
                        }
                    ]
                },
                {
                    "name": "String searching (Strings are just char arrays)",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0100-CharArraySearching"
                        }
                    ]
                },
                {
                    "name": "Lifetime of automatic variables",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0110-PointersToAutomaticVariables-v2"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Chapter 4",
            "description": "Heap and stack memory. Working with structs.",
            "sections": [
                {
                    "name": "Malloc, heap and time",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0120-TimeForMallocingHeapMemory"
                        }
                    ]
                },
                {
                    "name": "Heap allocation Gotchas",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0130-HeapGotchas-DanglingPointersAndDoubleFree"
                        }
                    ]
                },
                {
                    "name": "struct, typedefs and a linked list",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0140-StructTypedefLinkedList"
                        }
                    ]
                },
                {
                    "name": "Duplicating strings, memory allocation and deallocation of structures",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0150-CreatingLinksStrdup"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Chapter 5",
            "description": "Text input and output and parsing using getchar, gets, getline",
            "sections": [
                {
                    "name": "Reading characters, Trouble with gets",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0160-getputchar-gets-puts-v2"
                        }
                    ]
                },
                {
                    "name": "Introducing sscanf and friends",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0170-scanf-intro"
                        }
                    ]
                },
                {
                    "name": "getline is useful",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0180-getline"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Chapter 6",
            "description": "Introducing signals and process forking",
            "sections": [
                {
                    "name": "Introducing signals and forks",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0190-SIGINT-SIGALRM"
                        }
                    ]
                },
                {
                    "name": "Introducing fork and waitpid",
                    "activities": [
                        {
                            "type": "video",
                            "file": "mp4/0200-forkwaitpid-forkbomb"
                        }
                    ]
                }
            ]
        }
    ]
}
